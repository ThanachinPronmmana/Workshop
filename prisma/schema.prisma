// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
//1 User มีหลาย Order
//1 User มีหลาย Cart
model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String?
  name       String?
  picture    String?
  role       String   @default("user")
  enabled    Boolean  @default(true)
  address    String?
  orders     Order[]
  carts      Cart[]
  createdAdd DateTime @default(now())
  updatedAdd DateTime @updatedAt
}
//1 product อยู่ หลาย Order
//1 product อยู่ หลาย Cart
//1 product อยู่ หลาย image
model Product {
  id          Int              @id @default(autoincrement())
  title       String
  description String
  price       Float
  sold        Int              @default(0)
  quantity    Int
  orderItems  ProductOnOrder[]
  cartItems   ProductOnCart[]
  images      Image[]
  createdAdd  DateTime         @default(now())
  updatedAdd  DateTime         @updatedAt
}
//1 Oreder มีได้ หลาย product
model Order {
  id          Int              @id @default(autoincrement())
  product     ProductOnOrder[]
  cartTotal   Float
  orderStatus String           @default("Not Process")
  cratedAdd   DateTime         @default(now())
  updatedAdd  DateTime         @updatedAt
  orderedBy   User             @relation(fields: [orderById], references: [id])
  orderById   Int
}
//เก็บสินค้าและ order ไปเรื่อยๆ
model ProductOnOrder {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  count     Int
  price     Float
}

model Category {
  id         Int      @id @default(autoincrement())
  name       String
  createdAdd DateTime @default(now())
  updatedAdd DateTime @updatedAt
}
//1 cart มีได้หลายสินค้า
//Cart  สั่งโดยใคร
model Cart {
  id          Int             @id @default(autoincrement())
  products    ProductOnCart[]
  cartTotle   Float
  createdAdd  DateTime        @default(now())
  updatedAdd  DateTime        @updatedAt
  orderedBy   User            @relation(fields: [orderedById], references: [id] )
  orderedById Int
}

model ProductOnCart {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  count     Int
  price     Float
}

model Image {
  id         Int      @id @default(autoincrement())
  asset_id   String
  public_id  String
  url        String
  secure_url String
  createdAdd DateTime @default(now())
  updatedAdd DateTime @updatedAt
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  Int
}
